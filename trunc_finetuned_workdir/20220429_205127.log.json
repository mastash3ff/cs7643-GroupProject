{"env_info": "sys.platform: linux\nPython: 3.9.12 (main, Apr  5 2022, 06:56:58) [GCC 7.5.0]\nCUDA available: True\nGPU 0: NVIDIA GeForce RTX 3080 Ti\nCUDA_HOME: /usr/local/cuda\nNVCC: Cuda compilation tools, release 11.2, V11.2.67\nGCC: gcc (Ubuntu 11.2.0-7ubuntu2) 11.2.0\nPyTorch: 1.11.0\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.5.2 (Git Hash a9302535553c73243c632ad3c4c80beec3d19a1e)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - LAPACK is enabled (usually provided by MKL)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.3\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37\n  - CuDNN 8.2\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.3, CUDNN_VERSION=8.2.0, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.11.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=OFF, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, \n\nTorchVision: 0.12.0\nOpenCV: 4.5.5\nMMCV: 1.5.0\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.3\nMMDetection: 2.23.0+2cd6849", "config": "model = dict(\n    type='MaskRCNN',\n    backbone=dict(\n        type='SwinTransformer',\n        embed_dims=96,\n        depths=[2, 2, 6, 2],\n        num_heads=[3, 6, 12, 24],\n        window_size=7,\n        mlp_ratio=4,\n        qkv_bias=True,\n        qk_scale=None,\n        drop_rate=0.0,\n        attn_drop_rate=0.0,\n        drop_path_rate=0.2,\n        patch_norm=True,\n        out_indices=(0, 1, 2, 3),\n        with_cp=False,\n        convert_weights=True,\n        init_cfg=dict(\n            type='Pretrained',\n            checkpoint=\n            'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'\n        )),\n    neck=dict(\n        type='FPN',\n        in_channels=[96, 192, 384, 768],\n        out_channels=256,\n        num_outs=5),\n    rpn_head=dict(\n        type='RPNHead',\n        in_channels=256,\n        feat_channels=256,\n        anchor_generator=dict(\n            type='AnchorGenerator',\n            scales=[8],\n            ratios=[0.5, 1.0, 2.0],\n            strides=[4, 8, 16, 32, 64]),\n        bbox_coder=dict(\n            type='DeltaXYWHBBoxCoder',\n            target_means=[0.0, 0.0, 0.0, 0.0],\n            target_stds=[1.0, 1.0, 1.0, 1.0]),\n        loss_cls=dict(\n            type='CrossEntropyLoss', use_sigmoid=True, loss_weight=1.0),\n        loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n    roi_head=dict(\n        type='StandardRoIHead',\n        bbox_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=7, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        bbox_head=dict(\n            type='Shared2FCBBoxHead',\n            in_channels=256,\n            fc_out_channels=1024,\n            roi_feat_size=7,\n            num_classes=80,\n            bbox_coder=dict(\n                type='DeltaXYWHBBoxCoder',\n                target_means=[0.0, 0.0, 0.0, 0.0],\n                target_stds=[0.1, 0.1, 0.2, 0.2]),\n            reg_class_agnostic=False,\n            loss_cls=dict(\n                type='CrossEntropyLoss', use_sigmoid=False, loss_weight=1.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=1.0)),\n        mask_roi_extractor=dict(\n            type='SingleRoIExtractor',\n            roi_layer=dict(type='RoIAlign', output_size=14, sampling_ratio=0),\n            out_channels=256,\n            featmap_strides=[4, 8, 16, 32]),\n        mask_head=dict(\n            type='FCNMaskHead',\n            num_convs=4,\n            in_channels=256,\n            conv_out_channels=256,\n            num_classes=80,\n            loss_mask=dict(\n                type='CrossEntropyLoss', use_mask=True, loss_weight=1.0))),\n    train_cfg=dict(\n        rpn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.7,\n                neg_iou_thr=0.3,\n                min_pos_iou=0.3,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=256,\n                pos_fraction=0.5,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=False),\n            allowed_border=-1,\n            pos_weight=-1,\n            debug=False),\n        rpn_proposal=dict(\n            nms_pre=2000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            assigner=dict(\n                type='MaxIoUAssigner',\n                pos_iou_thr=0.5,\n                neg_iou_thr=0.5,\n                min_pos_iou=0.5,\n                match_low_quality=True,\n                ignore_iof_thr=-1),\n            sampler=dict(\n                type='RandomSampler',\n                num=512,\n                pos_fraction=0.25,\n                neg_pos_ub=-1,\n                add_gt_as_proposals=True),\n            mask_size=28,\n            pos_weight=-1,\n            debug=False)),\n    test_cfg=dict(\n        rpn=dict(\n            nms_pre=1000,\n            max_per_img=1000,\n            nms=dict(type='nms', iou_threshold=0.7),\n            min_bbox_size=0),\n        rcnn=dict(\n            score_thr=0.05,\n            nms=dict(type='nms', iou_threshold=0.5),\n            max_per_img=100,\n            mask_thr_binary=0.5)))\ndataset_type = 'CocoDataset'\ndata_root = 'data/coco_reduced/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True, with_mask=True),\n    dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n    dict(type='RandomFlip', flip_ratio=0.5),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=32),\n    dict(type='DefaultFormatBundle'),\n    dict(type='Collect', keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=2,\n    workers_per_gpu=2,\n    train=dict(\n        type='CocoDataset',\n        ann_file='data/coco_reduced/annotations/instances_train2017_trunc.json',\n        img_prefix='data/coco_reduced/train2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(type='LoadAnnotations', with_bbox=True, with_mask=True),\n            dict(type='Resize', img_scale=(1333, 800), keep_ratio=True),\n            dict(type='RandomFlip', flip_ratio=0.5),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=32),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_bboxes', 'gt_labels', 'gt_masks'])\n        ]),\n    val=dict(\n        type='CocoDataset',\n        ann_file='data/coco_reduced/annotations/instances_val2017_trunc.json',\n        img_prefix='data/coco_reduced/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file='data/coco_reduced/annotations/instances_val2017_trunc.json',\n        img_prefix='data/coco_reduced/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=32),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]))\nevaluation = dict(metric=['bbox', 'segm'])\noptimizer = dict(\n    type='AdamW',\n    lr=0.0001,\n    betas=(0.9, 0.999),\n    weight_decay=0.05,\n    paramwise_cfg=dict(\n        custom_keys=dict(\n            absolute_pos_embed=dict(decay_mult=0.0),\n            relative_position_bias_table=dict(decay_mult=0.0),\n            norm=dict(decay_mult=0.0))))\noptimizer_config = dict(grad_clip=None)\nlr_config = dict(\n    policy='step',\n    warmup='linear',\n    warmup_iters=1000,\n    warmup_ratio=0.001,\n    step=[8, 11])\nrunner = dict(type='EpochBasedRunner', max_epochs=12)\ncheckpoint_config = dict(interval=1)\nlog_config = dict(\n    interval=100,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ncustom_hooks = [dict(type='NumClassCheckHook')]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = 'checkpoints/mask_rcnn_swin-t-p4-w7_fpn_1x_coco_20210902_120937-9d6b7cfa.pth'\nresume_from = None\nworkflow = [('train', 1)]\nopencv_num_threads = 0\nmp_start_method = 'fork'\npretrained = 'https://github.com/SwinTransformer/storage/releases/download/v1.0.0/swin_tiny_patch4_window7_224.pth'\nwork_dir = 'trunc_finetuned_workdir'\nauto_resume = False\ngpu_ids = [0]\n", "seed": 1753988594, "exp_name": "trunc_mask_rcnn_swin-t-p4-w7_fpn_1x_coco.py"}
{"mode": "train", "epoch": 1, "iter": 100, "lr": 1e-05, "memory": 7090, "data_time": 0.04056, "loss_rpn_cls": 0.02292, "loss_rpn_bbox": 0.04824, "loss_cls": 0.18039, "acc": 93.21289, "loss_bbox": 0.23541, "loss_mask": 0.23351, "loss": 0.72048, "time": 0.30634}
{"mode": "train", "epoch": 1, "iter": 200, "lr": 2e-05, "memory": 7090, "data_time": 0.01539, "loss_rpn_cls": 0.02191, "loss_rpn_bbox": 0.04172, "loss_cls": 0.1866, "acc": 92.97266, "loss_bbox": 0.24179, "loss_mask": 0.2293, "loss": 0.72132, "time": 0.27492}
{"mode": "train", "epoch": 1, "iter": 300, "lr": 3e-05, "memory": 7106, "data_time": 0.01666, "loss_rpn_cls": 0.02112, "loss_rpn_bbox": 0.04761, "loss_cls": 0.18659, "acc": 93.00684, "loss_bbox": 0.23915, "loss_mask": 0.2341, "loss": 0.72857, "time": 0.27698}
{"mode": "train", "epoch": 1, "iter": 400, "lr": 4e-05, "memory": 7106, "data_time": 0.01512, "loss_rpn_cls": 0.02232, "loss_rpn_bbox": 0.04669, "loss_cls": 0.17812, "acc": 93.27246, "loss_bbox": 0.22738, "loss_mask": 0.22426, "loss": 0.69877, "time": 0.27385}
{"mode": "train", "epoch": 1, "iter": 500, "lr": 5e-05, "memory": 7142, "data_time": 0.0169, "loss_rpn_cls": 0.02494, "loss_rpn_bbox": 0.0473, "loss_cls": 0.19379, "acc": 92.78711, "loss_bbox": 0.24508, "loss_mask": 0.24104, "loss": 0.75215, "time": 0.2773}
{"mode": "train", "epoch": 1, "iter": 600, "lr": 6e-05, "memory": 7142, "data_time": 0.01618, "loss_rpn_cls": 0.02129, "loss_rpn_bbox": 0.04548, "loss_cls": 0.19217, "acc": 92.97168, "loss_bbox": 0.24166, "loss_mask": 0.22807, "loss": 0.72868, "time": 0.27595}
{"mode": "train", "epoch": 1, "iter": 700, "lr": 7e-05, "memory": 7168, "data_time": 0.01779, "loss_rpn_cls": 0.0256, "loss_rpn_bbox": 0.05083, "loss_cls": 0.21687, "acc": 92.36621, "loss_bbox": 0.25001, "loss_mask": 0.25, "loss": 0.79332, "time": 0.27511}
{"mode": "train", "epoch": 1, "iter": 800, "lr": 8e-05, "memory": 7168, "data_time": 0.01727, "loss_rpn_cls": 0.0285, "loss_rpn_bbox": 0.05383, "loss_cls": 0.2285, "acc": 91.81348, "loss_bbox": 0.26265, "loss_mask": 0.25171, "loss": 0.82519, "time": 0.27644}
{"mode": "train", "epoch": 1, "iter": 900, "lr": 9e-05, "memory": 7168, "data_time": 0.01679, "loss_rpn_cls": 0.02909, "loss_rpn_bbox": 0.05158, "loss_cls": 0.20498, "acc": 92.8623, "loss_bbox": 0.23449, "loss_mask": 0.24345, "loss": 0.76358, "time": 0.27129}
{"mode": "val", "epoch": 1, "iter": 500, "lr": 0.0001, "bbox_mAP": 0.462, "bbox_mAP_50": 0.696, "bbox_mAP_75": 0.54, "bbox_mAP_s": 0.334, "bbox_mAP_m": 0.519, "bbox_mAP_l": 0.608, "bbox_mAP_copypaste": "0.462 0.696 0.540 0.334 0.519 0.608", "segm_mAP": 0.433, "segm_mAP_50": 0.666, "segm_mAP_75": 0.484, "segm_mAP_s": 0.262, "segm_mAP_m": 0.469, "segm_mAP_l": 0.632, "segm_mAP_copypaste": "0.433 0.666 0.484 0.262 0.469 0.632"}
{"mode": "train", "epoch": 2, "iter": 100, "lr": 0.0001, "memory": 7168, "data_time": 0.04254, "loss_rpn_cls": 0.02857, "loss_rpn_bbox": 0.05205, "loss_cls": 0.19904, "acc": 92.98145, "loss_bbox": 0.23362, "loss_mask": 0.23732, "loss": 0.7506, "time": 0.30006}
{"mode": "train", "epoch": 2, "iter": 200, "lr": 0.0001, "memory": 7168, "data_time": 0.02001, "loss_rpn_cls": 0.02674, "loss_rpn_bbox": 0.05348, "loss_cls": 0.23803, "acc": 91.79492, "loss_bbox": 0.267, "loss_mask": 0.24492, "loss": 0.83018, "time": 0.2757}
{"mode": "train", "epoch": 2, "iter": 300, "lr": 0.0001, "memory": 7168, "data_time": 0.01846, "loss_rpn_cls": 0.02528, "loss_rpn_bbox": 0.05412, "loss_cls": 0.21144, "acc": 92.54199, "loss_bbox": 0.24692, "loss_mask": 0.25197, "loss": 0.78972, "time": 0.27179}
{"mode": "train", "epoch": 2, "iter": 400, "lr": 0.0001, "memory": 7168, "data_time": 0.02205, "loss_rpn_cls": 0.02998, "loss_rpn_bbox": 0.05373, "loss_cls": 0.23856, "acc": 91.69336, "loss_bbox": 0.26413, "loss_mask": 0.24695, "loss": 0.83334, "time": 0.2811}
{"mode": "train", "epoch": 2, "iter": 500, "lr": 0.0001, "memory": 7168, "data_time": 0.02183, "loss_rpn_cls": 0.03369, "loss_rpn_bbox": 0.05689, "loss_cls": 0.22206, "acc": 92.29102, "loss_bbox": 0.25299, "loss_mask": 0.25932, "loss": 0.82496, "time": 0.27783}
{"mode": "train", "epoch": 2, "iter": 600, "lr": 0.0001, "memory": 7168, "data_time": 0.01935, "loss_rpn_cls": 0.03109, "loss_rpn_bbox": 0.05435, "loss_cls": 0.24539, "acc": 91.68359, "loss_bbox": 0.27226, "loss_mask": 0.26349, "loss": 0.86659, "time": 0.27371}
{"mode": "train", "epoch": 2, "iter": 700, "lr": 0.0001, "memory": 7168, "data_time": 0.02062, "loss_rpn_cls": 0.03099, "loss_rpn_bbox": 0.05817, "loss_cls": 0.2481, "acc": 91.53906, "loss_bbox": 0.28379, "loss_mask": 0.26452, "loss": 0.88556, "time": 0.27885}
{"mode": "train", "epoch": 2, "iter": 800, "lr": 0.0001, "memory": 7168, "data_time": 0.01685, "loss_rpn_cls": 0.03007, "loss_rpn_bbox": 0.04827, "loss_cls": 0.2296, "acc": 92.26367, "loss_bbox": 0.24284, "loss_mask": 0.25034, "loss": 0.80112, "time": 0.27076}
{"mode": "train", "epoch": 2, "iter": 900, "lr": 0.0001, "memory": 7168, "data_time": 0.01884, "loss_rpn_cls": 0.03273, "loss_rpn_bbox": 0.05052, "loss_cls": 0.23593, "acc": 92.28223, "loss_bbox": 0.25228, "loss_mask": 0.26495, "loss": 0.8364, "time": 0.27627}
{"mode": "val", "epoch": 2, "iter": 500, "lr": 0.0001, "bbox_mAP": 0.398, "bbox_mAP_50": 0.632, "bbox_mAP_75": 0.444, "bbox_mAP_s": 0.245, "bbox_mAP_m": 0.451, "bbox_mAP_l": 0.538, "bbox_mAP_copypaste": "0.398 0.632 0.444 0.245 0.451 0.538", "segm_mAP": 0.383, "segm_mAP_50": 0.607, "segm_mAP_75": 0.41, "segm_mAP_s": 0.212, "segm_mAP_m": 0.431, "segm_mAP_l": 0.558, "segm_mAP_copypaste": "0.383 0.607 0.410 0.212 0.431 0.558"}
{"mode": "train", "epoch": 3, "iter": 100, "lr": 0.0001, "memory": 7168, "data_time": 0.04147, "loss_rpn_cls": 0.02676, "loss_rpn_bbox": 0.04699, "loss_cls": 0.20008, "acc": 92.76172, "loss_bbox": 0.25045, "loss_mask": 0.23681, "loss": 0.76109, "time": 0.30118}
{"mode": "train", "epoch": 3, "iter": 200, "lr": 0.0001, "memory": 7168, "data_time": 0.0172, "loss_rpn_cls": 0.02135, "loss_rpn_bbox": 0.04788, "loss_cls": 0.17968, "acc": 93.49219, "loss_bbox": 0.23049, "loss_mask": 0.24432, "loss": 0.72372, "time": 0.27474}
{"mode": "train", "epoch": 3, "iter": 300, "lr": 0.0001, "memory": 7168, "data_time": 0.0194, "loss_rpn_cls": 0.0238, "loss_rpn_bbox": 0.04944, "loss_cls": 0.19672, "acc": 92.94531, "loss_bbox": 0.25623, "loss_mask": 0.24082, "loss": 0.767, "time": 0.27577}
{"mode": "train", "epoch": 3, "iter": 400, "lr": 0.0001, "memory": 7169, "data_time": 0.01954, "loss_rpn_cls": 0.0237, "loss_rpn_bbox": 0.04972, "loss_cls": 0.21794, "acc": 92.2207, "loss_bbox": 0.27332, "loss_mask": 0.25269, "loss": 0.81738, "time": 0.28012}
{"mode": "train", "epoch": 3, "iter": 500, "lr": 0.0001, "memory": 7169, "data_time": 0.02183, "loss_rpn_cls": 0.03194, "loss_rpn_bbox": 0.06088, "loss_cls": 0.22697, "acc": 92.04883, "loss_bbox": 0.26625, "loss_mask": 0.24466, "loss": 0.8307, "time": 0.28147}
{"mode": "train", "epoch": 3, "iter": 600, "lr": 0.0001, "memory": 7169, "data_time": 0.02121, "loss_rpn_cls": 0.02702, "loss_rpn_bbox": 0.05364, "loss_cls": 0.19545, "acc": 92.73828, "loss_bbox": 0.25517, "loss_mask": 0.24443, "loss": 0.77571, "time": 0.27867}
{"mode": "train", "epoch": 3, "iter": 700, "lr": 0.0001, "memory": 7169, "data_time": 0.02039, "loss_rpn_cls": 0.02206, "loss_rpn_bbox": 0.05074, "loss_cls": 0.20696, "acc": 92.43262, "loss_bbox": 0.25592, "loss_mask": 0.24409, "loss": 0.77976, "time": 0.27787}
{"mode": "train", "epoch": 3, "iter": 800, "lr": 0.0001, "memory": 7169, "data_time": 0.01822, "loss_rpn_cls": 0.0231, "loss_rpn_bbox": 0.04792, "loss_cls": 0.20444, "acc": 92.7168, "loss_bbox": 0.243, "loss_mask": 0.23365, "loss": 0.75212, "time": 0.28351}
{"mode": "train", "epoch": 3, "iter": 900, "lr": 0.0001, "memory": 7169, "data_time": 0.01884, "loss_rpn_cls": 0.02636, "loss_rpn_bbox": 0.04985, "loss_cls": 0.22952, "acc": 91.88379, "loss_bbox": 0.26729, "loss_mask": 0.25755, "loss": 0.83055, "time": 0.28318}
{"mode": "val", "epoch": 3, "iter": 500, "lr": 0.0001, "bbox_mAP": 0.396, "bbox_mAP_50": 0.628, "bbox_mAP_75": 0.445, "bbox_mAP_s": 0.265, "bbox_mAP_m": 0.47, "bbox_mAP_l": 0.535, "bbox_mAP_copypaste": "0.396 0.628 0.445 0.265 0.470 0.535", "segm_mAP": 0.389, "segm_mAP_50": 0.604, "segm_mAP_75": 0.427, "segm_mAP_s": 0.215, "segm_mAP_m": 0.446, "segm_mAP_l": 0.578, "segm_mAP_copypaste": "0.389 0.604 0.427 0.215 0.446 0.578"}
{"mode": "train", "epoch": 4, "iter": 100, "lr": 0.0001, "memory": 7169, "data_time": 0.04347, "loss_rpn_cls": 0.02314, "loss_rpn_bbox": 0.05094, "loss_cls": 0.1876, "acc": 93.04492, "loss_bbox": 0.25123, "loss_mask": 0.22897, "loss": 0.74187, "time": 0.3052}
{"mode": "train", "epoch": 4, "iter": 200, "lr": 0.0001, "memory": 7169, "data_time": 0.0192, "loss_rpn_cls": 0.02112, "loss_rpn_bbox": 0.05525, "loss_cls": 0.18397, "acc": 93.0332, "loss_bbox": 0.2574, "loss_mask": 0.22989, "loss": 0.74763, "time": 0.27894}
{"mode": "train", "epoch": 4, "iter": 300, "lr": 0.0001, "memory": 7169, "data_time": 0.01769, "loss_rpn_cls": 0.02116, "loss_rpn_bbox": 0.04708, "loss_cls": 0.19463, "acc": 93.04883, "loss_bbox": 0.24998, "loss_mask": 0.23242, "loss": 0.74527, "time": 0.27863}
{"mode": "train", "epoch": 4, "iter": 400, "lr": 0.0001, "memory": 7169, "data_time": 0.01783, "loss_rpn_cls": 0.02136, "loss_rpn_bbox": 0.04797, "loss_cls": 0.181, "acc": 93.35254, "loss_bbox": 0.23596, "loss_mask": 0.22838, "loss": 0.71467, "time": 0.27537}
{"mode": "train", "epoch": 4, "iter": 500, "lr": 0.0001, "memory": 7169, "data_time": 0.01725, "loss_rpn_cls": 0.0209, "loss_rpn_bbox": 0.05376, "loss_cls": 0.20995, "acc": 92.40625, "loss_bbox": 0.25632, "loss_mask": 0.23864, "loss": 0.77957, "time": 0.27642}
{"mode": "train", "epoch": 4, "iter": 600, "lr": 0.0001, "memory": 7169, "data_time": 0.01915, "loss_rpn_cls": 0.02556, "loss_rpn_bbox": 0.04784, "loss_cls": 0.20479, "acc": 92.58984, "loss_bbox": 0.25038, "loss_mask": 0.24015, "loss": 0.76872, "time": 0.27359}
{"mode": "train", "epoch": 4, "iter": 700, "lr": 0.0001, "memory": 7169, "data_time": 0.01867, "loss_rpn_cls": 0.0282, "loss_rpn_bbox": 0.05168, "loss_cls": 0.19221, "acc": 93.03809, "loss_bbox": 0.2397, "loss_mask": 0.24705, "loss": 0.75883, "time": 0.27466}
{"mode": "train", "epoch": 4, "iter": 800, "lr": 0.0001, "memory": 7169, "data_time": 0.01902, "loss_rpn_cls": 0.02565, "loss_rpn_bbox": 0.04816, "loss_cls": 0.18605, "acc": 93.37305, "loss_bbox": 0.23103, "loss_mask": 0.23851, "loss": 0.7294, "time": 0.2776}
{"mode": "train", "epoch": 4, "iter": 900, "lr": 0.0001, "memory": 7169, "data_time": 0.01804, "loss_rpn_cls": 0.02596, "loss_rpn_bbox": 0.05468, "loss_cls": 0.19435, "acc": 93.04102, "loss_bbox": 0.25338, "loss_mask": 0.24232, "loss": 0.77069, "time": 0.27503}
{"mode": "val", "epoch": 4, "iter": 500, "lr": 0.0001, "bbox_mAP": 0.389, "bbox_mAP_50": 0.622, "bbox_mAP_75": 0.436, "bbox_mAP_s": 0.247, "bbox_mAP_m": 0.447, "bbox_mAP_l": 0.526, "bbox_mAP_copypaste": "0.389 0.622 0.436 0.247 0.447 0.526", "segm_mAP": 0.38, "segm_mAP_50": 0.593, "segm_mAP_75": 0.418, "segm_mAP_s": 0.205, "segm_mAP_m": 0.435, "segm_mAP_l": 0.562, "segm_mAP_copypaste": "0.380 0.593 0.418 0.205 0.435 0.562"}
{"mode": "train", "epoch": 5, "iter": 100, "lr": 0.0001, "memory": 7169, "data_time": 0.04253, "loss_rpn_cls": 0.01694, "loss_rpn_bbox": 0.04635, "loss_cls": 0.17475, "acc": 93.53711, "loss_bbox": 0.24317, "loss_mask": 0.23232, "loss": 0.71353, "time": 0.30485}
{"mode": "train", "epoch": 5, "iter": 200, "lr": 0.0001, "memory": 7169, "data_time": 0.01879, "loss_rpn_cls": 0.01673, "loss_rpn_bbox": 0.04379, "loss_cls": 0.15581, "acc": 94.1377, "loss_bbox": 0.22392, "loss_mask": 0.20343, "loss": 0.64369, "time": 0.27586}
{"mode": "train", "epoch": 5, "iter": 300, "lr": 0.0001, "memory": 7169, "data_time": 0.01958, "loss_rpn_cls": 0.02163, "loss_rpn_bbox": 0.05272, "loss_cls": 0.18066, "acc": 93.48926, "loss_bbox": 0.24382, "loss_mask": 0.22658, "loss": 0.72542, "time": 0.27973}
{"mode": "train", "epoch": 5, "iter": 400, "lr": 0.0001, "memory": 7169, "data_time": 0.01684, "loss_rpn_cls": 0.01893, "loss_rpn_bbox": 0.04738, "loss_cls": 0.17862, "acc": 93.50781, "loss_bbox": 0.24026, "loss_mask": 0.23402, "loss": 0.71922, "time": 0.27246}
{"mode": "train", "epoch": 5, "iter": 500, "lr": 0.0001, "memory": 7169, "data_time": 0.01859, "loss_rpn_cls": 0.0189, "loss_rpn_bbox": 0.04571, "loss_cls": 0.178, "acc": 93.44922, "loss_bbox": 0.24278, "loss_mask": 0.2326, "loss": 0.71799, "time": 0.27723}
{"mode": "train", "epoch": 5, "iter": 600, "lr": 0.0001, "memory": 7169, "data_time": 0.01949, "loss_rpn_cls": 0.02225, "loss_rpn_bbox": 0.05184, "loss_cls": 0.20779, "acc": 92.72168, "loss_bbox": 0.25033, "loss_mask": 0.23615, "loss": 0.76836, "time": 0.2824}
{"mode": "train", "epoch": 5, "iter": 700, "lr": 0.0001, "memory": 7169, "data_time": 0.01862, "loss_rpn_cls": 0.02107, "loss_rpn_bbox": 0.0481, "loss_cls": 0.16985, "acc": 93.70508, "loss_bbox": 0.23253, "loss_mask": 0.22587, "loss": 0.69742, "time": 0.28453}
{"mode": "train", "epoch": 5, "iter": 800, "lr": 0.0001, "memory": 7169, "data_time": 0.01815, "loss_rpn_cls": 0.02097, "loss_rpn_bbox": 0.051, "loss_cls": 0.17779, "acc": 93.68945, "loss_bbox": 0.2265, "loss_mask": 0.2356, "loss": 0.71186, "time": 0.27763}
{"mode": "train", "epoch": 5, "iter": 900, "lr": 0.0001, "memory": 7169, "data_time": 0.02164, "loss_rpn_cls": 0.02332, "loss_rpn_bbox": 0.0583, "loss_cls": 0.19362, "acc": 92.85938, "loss_bbox": 0.25427, "loss_mask": 0.24221, "loss": 0.77172, "time": 0.28831}
{"mode": "val", "epoch": 5, "iter": 500, "lr": 0.0001, "bbox_mAP": 0.381, "bbox_mAP_50": 0.606, "bbox_mAP_75": 0.435, "bbox_mAP_s": 0.263, "bbox_mAP_m": 0.435, "bbox_mAP_l": 0.528, "bbox_mAP_copypaste": "0.381 0.606 0.435 0.263 0.435 0.528", "segm_mAP": 0.359, "segm_mAP_50": 0.564, "segm_mAP_75": 0.386, "segm_mAP_s": 0.21, "segm_mAP_m": 0.417, "segm_mAP_l": 0.544, "segm_mAP_copypaste": "0.359 0.564 0.386 0.210 0.417 0.544"}
{"mode": "train", "epoch": 6, "iter": 100, "lr": 0.0001, "memory": 7169, "data_time": 0.04263, "loss_rpn_cls": 0.01694, "loss_rpn_bbox": 0.04415, "loss_cls": 0.16086, "acc": 94.06445, "loss_bbox": 0.22379, "loss_mask": 0.22028, "loss": 0.66602, "time": 0.30096}
{"mode": "train", "epoch": 6, "iter": 200, "lr": 0.0001, "memory": 7169, "data_time": 0.01984, "loss_rpn_cls": 0.01863, "loss_rpn_bbox": 0.05041, "loss_cls": 0.1667, "acc": 93.91016, "loss_bbox": 0.23652, "loss_mask": 0.21739, "loss": 0.68966, "time": 0.27695}
{"mode": "train", "epoch": 6, "iter": 300, "lr": 0.0001, "memory": 7169, "data_time": 0.01872, "loss_rpn_cls": 0.01698, "loss_rpn_bbox": 0.04296, "loss_cls": 0.14827, "acc": 94.375, "loss_bbox": 0.21087, "loss_mask": 0.21067, "loss": 0.62974, "time": 0.27608}
{"mode": "train", "epoch": 6, "iter": 400, "lr": 0.0001, "memory": 7169, "data_time": 0.0193, "loss_rpn_cls": 0.0201, "loss_rpn_bbox": 0.04835, "loss_cls": 0.19411, "acc": 93.03027, "loss_bbox": 0.24421, "loss_mask": 0.2431, "loss": 0.74987, "time": 0.28123}
{"mode": "train", "epoch": 6, "iter": 500, "lr": 0.0001, "memory": 7169, "data_time": 0.02194, "loss_rpn_cls": 0.02073, "loss_rpn_bbox": 0.05214, "loss_cls": 0.18575, "acc": 93.06641, "loss_bbox": 0.25781, "loss_mask": 0.2277, "loss": 0.74413, "time": 0.28625}
{"mode": "train", "epoch": 6, "iter": 600, "lr": 0.0001, "memory": 7169, "data_time": 0.01921, "loss_rpn_cls": 0.01972, "loss_rpn_bbox": 0.04542, "loss_cls": 0.15734, "acc": 94.21094, "loss_bbox": 0.22263, "loss_mask": 0.22954, "loss": 0.67466, "time": 0.2787}
{"mode": "train", "epoch": 6, "iter": 700, "lr": 0.0001, "memory": 7169, "data_time": 0.02021, "loss_rpn_cls": 0.0194, "loss_rpn_bbox": 0.05665, "loss_cls": 0.18134, "acc": 93.25391, "loss_bbox": 0.25065, "loss_mask": 0.22999, "loss": 0.73803, "time": 0.27951}
{"mode": "train", "epoch": 6, "iter": 800, "lr": 0.0001, "memory": 7169, "data_time": 0.01854, "loss_rpn_cls": 0.02021, "loss_rpn_bbox": 0.05181, "loss_cls": 0.18607, "acc": 93.47168, "loss_bbox": 0.23482, "loss_mask": 0.22253, "loss": 0.71544, "time": 0.275}
{"mode": "train", "epoch": 6, "iter": 900, "lr": 0.0001, "memory": 7169, "data_time": 0.02096, "loss_rpn_cls": 0.01917, "loss_rpn_bbox": 0.0545, "loss_cls": 0.19769, "acc": 93.02441, "loss_bbox": 0.2568, "loss_mask": 0.2273, "loss": 0.75546, "time": 0.28465}
{"mode": "val", "epoch": 6, "iter": 500, "lr": 0.0001, "bbox_mAP": 0.366, "bbox_mAP_50": 0.597, "bbox_mAP_75": 0.409, "bbox_mAP_s": 0.242, "bbox_mAP_m": 0.412, "bbox_mAP_l": 0.503, "bbox_mAP_copypaste": "0.366 0.597 0.409 0.242 0.412 0.503", "segm_mAP": 0.355, "segm_mAP_50": 0.565, "segm_mAP_75": 0.388, "segm_mAP_s": 0.196, "segm_mAP_m": 0.401, "segm_mAP_l": 0.534, "segm_mAP_copypaste": "0.355 0.565 0.388 0.196 0.401 0.534"}
{"mode": "train", "epoch": 7, "iter": 100, "lr": 0.0001, "memory": 7169, "data_time": 0.04561, "loss_rpn_cls": 0.01695, "loss_rpn_bbox": 0.04985, "loss_cls": 0.16886, "acc": 93.73145, "loss_bbox": 0.24341, "loss_mask": 0.21422, "loss": 0.69329, "time": 0.30799}
{"mode": "train", "epoch": 7, "iter": 200, "lr": 0.0001, "memory": 7169, "data_time": 0.02082, "loss_rpn_cls": 0.0156, "loss_rpn_bbox": 0.0467, "loss_cls": 0.14893, "acc": 94.39941, "loss_bbox": 0.22278, "loss_mask": 0.21626, "loss": 0.65027, "time": 0.27989}
{"mode": "train", "epoch": 7, "iter": 300, "lr": 0.0001, "memory": 7169, "data_time": 0.01796, "loss_rpn_cls": 0.01558, "loss_rpn_bbox": 0.04549, "loss_cls": 0.14674, "acc": 94.53516, "loss_bbox": 0.20617, "loss_mask": 0.21528, "loss": 0.62926, "time": 0.27701}
{"mode": "train", "epoch": 7, "iter": 400, "lr": 0.0001, "memory": 7169, "data_time": 0.02089, "loss_rpn_cls": 0.01519, "loss_rpn_bbox": 0.04685, "loss_cls": 0.16389, "acc": 93.83496, "loss_bbox": 0.22961, "loss_mask": 0.21704, "loss": 0.67258, "time": 0.28579}
{"mode": "train", "epoch": 7, "iter": 500, "lr": 0.0001, "memory": 7169, "data_time": 0.01934, "loss_rpn_cls": 0.0171, "loss_rpn_bbox": 0.05198, "loss_cls": 0.18585, "acc": 93.02344, "loss_bbox": 0.25097, "loss_mask": 0.22665, "loss": 0.73255, "time": 0.28157}
{"mode": "train", "epoch": 7, "iter": 600, "lr": 0.0001, "memory": 7169, "data_time": 0.01991, "loss_rpn_cls": 0.02133, "loss_rpn_bbox": 0.04909, "loss_cls": 0.16739, "acc": 93.82715, "loss_bbox": 0.23277, "loss_mask": 0.21799, "loss": 0.68858, "time": 0.2811}
{"mode": "train", "epoch": 7, "iter": 700, "lr": 0.0001, "memory": 7169, "data_time": 0.0198, "loss_rpn_cls": 0.01926, "loss_rpn_bbox": 0.05237, "loss_cls": 0.17227, "acc": 93.58594, "loss_bbox": 0.24043, "loss_mask": 0.22998, "loss": 0.71431, "time": 0.27957}
{"mode": "train", "epoch": 7, "iter": 800, "lr": 0.0001, "memory": 7169, "data_time": 0.01699, "loss_rpn_cls": 0.01422, "loss_rpn_bbox": 0.0446, "loss_cls": 0.15839, "acc": 93.98145, "loss_bbox": 0.22388, "loss_mask": 0.22504, "loss": 0.66613, "time": 0.27687}
{"mode": "train", "epoch": 7, "iter": 900, "lr": 0.0001, "memory": 7169, "data_time": 0.01841, "loss_rpn_cls": 0.01649, "loss_rpn_bbox": 0.0468, "loss_cls": 0.17197, "acc": 93.59668, "loss_bbox": 0.23771, "loss_mask": 0.22634, "loss": 0.69931, "time": 0.27661}
{"mode": "val", "epoch": 7, "iter": 500, "lr": 0.0001, "bbox_mAP": 0.35, "bbox_mAP_50": 0.574, "bbox_mAP_75": 0.381, "bbox_mAP_s": 0.226, "bbox_mAP_m": 0.42, "bbox_mAP_l": 0.486, "bbox_mAP_copypaste": "0.350 0.574 0.381 0.226 0.420 0.486", "segm_mAP": 0.338, "segm_mAP_50": 0.548, "segm_mAP_75": 0.359, "segm_mAP_s": 0.193, "segm_mAP_m": 0.403, "segm_mAP_l": 0.513, "segm_mAP_copypaste": "0.338 0.548 0.359 0.193 0.403 0.513"}
{"mode": "train", "epoch": 8, "iter": 100, "lr": 0.0001, "memory": 7169, "data_time": 0.04367, "loss_rpn_cls": 0.01676, "loss_rpn_bbox": 0.04859, "loss_cls": 0.15383, "acc": 94.15723, "loss_bbox": 0.24356, "loss_mask": 0.21243, "loss": 0.67517, "time": 0.30604}
{"mode": "train", "epoch": 8, "iter": 200, "lr": 0.0001, "memory": 7169, "data_time": 0.02233, "loss_rpn_cls": 0.01539, "loss_rpn_bbox": 0.04973, "loss_cls": 0.14798, "acc": 94.34473, "loss_bbox": 0.22309, "loss_mask": 0.21306, "loss": 0.64924, "time": 0.28151}
{"mode": "train", "epoch": 8, "iter": 300, "lr": 0.0001, "memory": 7169, "data_time": 0.02089, "loss_rpn_cls": 0.01563, "loss_rpn_bbox": 0.05005, "loss_cls": 0.14761, "acc": 94.45898, "loss_bbox": 0.22274, "loss_mask": 0.21335, "loss": 0.64938, "time": 0.28023}
{"mode": "train", "epoch": 8, "iter": 400, "lr": 0.0001, "memory": 7169, "data_time": 0.02054, "loss_rpn_cls": 0.01759, "loss_rpn_bbox": 0.04927, "loss_cls": 0.16603, "acc": 93.87891, "loss_bbox": 0.24485, "loss_mask": 0.22046, "loss": 0.6982, "time": 0.27976}
{"mode": "train", "epoch": 8, "iter": 500, "lr": 0.0001, "memory": 7169, "data_time": 0.01915, "loss_rpn_cls": 0.01621, "loss_rpn_bbox": 0.04648, "loss_cls": 0.15789, "acc": 93.96387, "loss_bbox": 0.23399, "loss_mask": 0.21586, "loss": 0.67042, "time": 0.2796}
{"mode": "train", "epoch": 8, "iter": 600, "lr": 0.0001, "memory": 7169, "data_time": 0.01854, "loss_rpn_cls": 0.01337, "loss_rpn_bbox": 0.04617, "loss_cls": 0.14908, "acc": 94.22949, "loss_bbox": 0.22359, "loss_mask": 0.21621, "loss": 0.6484, "time": 0.2749}
{"mode": "train", "epoch": 8, "iter": 700, "lr": 0.0001, "memory": 7169, "data_time": 0.01659, "loss_rpn_cls": 0.015, "loss_rpn_bbox": 0.03965, "loss_cls": 0.146, "acc": 94.63184, "loss_bbox": 0.20698, "loss_mask": 0.20477, "loss": 0.6124, "time": 0.27184}
{"mode": "train", "epoch": 8, "iter": 800, "lr": 0.0001, "memory": 7169, "data_time": 0.01759, "loss_rpn_cls": 0.01336, "loss_rpn_bbox": 0.04355, "loss_cls": 0.15457, "acc": 94.1123, "loss_bbox": 0.22621, "loss_mask": 0.21813, "loss": 0.65582, "time": 0.27653}
{"mode": "train", "epoch": 8, "iter": 900, "lr": 0.0001, "memory": 7169, "data_time": 0.01905, "loss_rpn_cls": 0.01609, "loss_rpn_bbox": 0.0476, "loss_cls": 0.16225, "acc": 93.80469, "loss_bbox": 0.23648, "loss_mask": 0.23094, "loss": 0.69336, "time": 0.27993}
{"mode": "val", "epoch": 8, "iter": 500, "lr": 0.0001, "bbox_mAP": 0.361, "bbox_mAP_50": 0.572, "bbox_mAP_75": 0.394, "bbox_mAP_s": 0.217, "bbox_mAP_m": 0.433, "bbox_mAP_l": 0.494, "bbox_mAP_copypaste": "0.361 0.572 0.394 0.217 0.433 0.494", "segm_mAP": 0.339, "segm_mAP_50": 0.541, "segm_mAP_75": 0.362, "segm_mAP_s": 0.178, "segm_mAP_m": 0.404, "segm_mAP_l": 0.517, "segm_mAP_copypaste": "0.339 0.541 0.362 0.178 0.404 0.517"}
{"mode": "train", "epoch": 9, "iter": 100, "lr": 1e-05, "memory": 7169, "data_time": 0.04657, "loss_rpn_cls": 0.01512, "loss_rpn_bbox": 0.04607, "loss_cls": 0.15279, "acc": 94.10059, "loss_bbox": 0.23365, "loss_mask": 0.21114, "loss": 0.65877, "time": 0.31054}
{"mode": "train", "epoch": 9, "iter": 200, "lr": 1e-05, "memory": 7169, "data_time": 0.01703, "loss_rpn_cls": 0.01035, "loss_rpn_bbox": 0.03427, "loss_cls": 0.12189, "acc": 95.29883, "loss_bbox": 0.19025, "loss_mask": 0.19698, "loss": 0.55373, "time": 0.27734}
{"mode": "train", "epoch": 9, "iter": 300, "lr": 1e-05, "memory": 7169, "data_time": 0.021, "loss_rpn_cls": 0.01325, "loss_rpn_bbox": 0.04539, "loss_cls": 0.13053, "acc": 94.94629, "loss_bbox": 0.21031, "loss_mask": 0.20268, "loss": 0.60216, "time": 0.27964}
{"mode": "train", "epoch": 9, "iter": 400, "lr": 1e-05, "memory": 7169, "data_time": 0.02088, "loss_rpn_cls": 0.01302, "loss_rpn_bbox": 0.04304, "loss_cls": 0.139, "acc": 94.73145, "loss_bbox": 0.21873, "loss_mask": 0.20252, "loss": 0.61631, "time": 0.28129}
{"mode": "train", "epoch": 9, "iter": 500, "lr": 1e-05, "memory": 7169, "data_time": 0.01827, "loss_rpn_cls": 0.01012, "loss_rpn_bbox": 0.04414, "loss_cls": 0.11635, "acc": 95.45215, "loss_bbox": 0.20235, "loss_mask": 0.19388, "loss": 0.56684, "time": 0.28764}
{"mode": "train", "epoch": 9, "iter": 600, "lr": 1e-05, "memory": 7169, "data_time": 0.01821, "loss_rpn_cls": 0.01089, "loss_rpn_bbox": 0.04057, "loss_cls": 0.12143, "acc": 95.21973, "loss_bbox": 0.19542, "loss_mask": 0.19327, "loss": 0.56159, "time": 0.27834}
{"mode": "train", "epoch": 9, "iter": 700, "lr": 1e-05, "memory": 7169, "data_time": 0.01935, "loss_rpn_cls": 0.01037, "loss_rpn_bbox": 0.03932, "loss_cls": 0.12895, "acc": 94.96094, "loss_bbox": 0.20148, "loss_mask": 0.19802, "loss": 0.57814, "time": 0.28116}
{"mode": "train", "epoch": 9, "iter": 800, "lr": 1e-05, "memory": 7169, "data_time": 0.02002, "loss_rpn_cls": 0.0108, "loss_rpn_bbox": 0.04719, "loss_cls": 0.13401, "acc": 94.68945, "loss_bbox": 0.21039, "loss_mask": 0.2034, "loss": 0.60579, "time": 0.27891}
{"mode": "train", "epoch": 9, "iter": 900, "lr": 1e-05, "memory": 7169, "data_time": 0.01861, "loss_rpn_cls": 0.01175, "loss_rpn_bbox": 0.04047, "loss_cls": 0.12266, "acc": 95.16699, "loss_bbox": 0.20707, "loss_mask": 0.19498, "loss": 0.57694, "time": 0.27904}
{"mode": "val", "epoch": 9, "iter": 500, "lr": 1e-05, "bbox_mAP": 0.407, "bbox_mAP_50": 0.617, "bbox_mAP_75": 0.459, "bbox_mAP_s": 0.244, "bbox_mAP_m": 0.474, "bbox_mAP_l": 0.552, "bbox_mAP_copypaste": "0.407 0.617 0.459 0.244 0.474 0.552", "segm_mAP": 0.378, "segm_mAP_50": 0.582, "segm_mAP_75": 0.404, "segm_mAP_s": 0.198, "segm_mAP_m": 0.434, "segm_mAP_l": 0.572, "segm_mAP_copypaste": "0.378 0.582 0.404 0.198 0.434 0.572"}
{"mode": "train", "epoch": 10, "iter": 100, "lr": 1e-05, "memory": 7169, "data_time": 0.04342, "loss_rpn_cls": 0.01066, "loss_rpn_bbox": 0.04109, "loss_cls": 0.11921, "acc": 95.27637, "loss_bbox": 0.20266, "loss_mask": 0.19158, "loss": 0.56519, "time": 0.30372}
{"mode": "train", "epoch": 10, "iter": 200, "lr": 1e-05, "memory": 7169, "data_time": 0.02258, "loss_rpn_cls": 0.00945, "loss_rpn_bbox": 0.03942, "loss_cls": 0.12456, "acc": 95.00391, "loss_bbox": 0.2056, "loss_mask": 0.19727, "loss": 0.57629, "time": 0.28344}
{"mode": "train", "epoch": 10, "iter": 300, "lr": 1e-05, "memory": 7169, "data_time": 0.01848, "loss_rpn_cls": 0.0097, "loss_rpn_bbox": 0.03844, "loss_cls": 0.11014, "acc": 95.68945, "loss_bbox": 0.18833, "loss_mask": 0.18471, "loss": 0.53132, "time": 0.27822}
{"mode": "train", "epoch": 10, "iter": 400, "lr": 1e-05, "memory": 7169, "data_time": 0.01698, "loss_rpn_cls": 0.00917, "loss_rpn_bbox": 0.03853, "loss_cls": 0.11286, "acc": 95.51953, "loss_bbox": 0.18624, "loss_mask": 0.1899, "loss": 0.53671, "time": 0.278}
{"mode": "train", "epoch": 10, "iter": 500, "lr": 1e-05, "memory": 7169, "data_time": 0.01834, "loss_rpn_cls": 0.00922, "loss_rpn_bbox": 0.04207, "loss_cls": 0.11722, "acc": 95.41406, "loss_bbox": 0.19628, "loss_mask": 0.19673, "loss": 0.56151, "time": 0.27692}
{"mode": "train", "epoch": 10, "iter": 600, "lr": 1e-05, "memory": 7169, "data_time": 0.01834, "loss_rpn_cls": 0.01057, "loss_rpn_bbox": 0.03696, "loss_cls": 0.10959, "acc": 95.69727, "loss_bbox": 0.18042, "loss_mask": 0.192, "loss": 0.52953, "time": 0.28192}
{"mode": "train", "epoch": 10, "iter": 700, "lr": 1e-05, "memory": 7169, "data_time": 0.02088, "loss_rpn_cls": 0.01122, "loss_rpn_bbox": 0.0392, "loss_cls": 0.12176, "acc": 95.35547, "loss_bbox": 0.19688, "loss_mask": 0.1952, "loss": 0.56425, "time": 0.28051}
{"mode": "train", "epoch": 10, "iter": 800, "lr": 1e-05, "memory": 7169, "data_time": 0.02022, "loss_rpn_cls": 0.00961, "loss_rpn_bbox": 0.04088, "loss_cls": 0.11952, "acc": 95.30273, "loss_bbox": 0.19755, "loss_mask": 0.19462, "loss": 0.56218, "time": 0.28564}
{"mode": "train", "epoch": 10, "iter": 900, "lr": 1e-05, "memory": 7169, "data_time": 0.0198, "loss_rpn_cls": 0.00953, "loss_rpn_bbox": 0.03798, "loss_cls": 0.11046, "acc": 95.60254, "loss_bbox": 0.1845, "loss_mask": 0.18851, "loss": 0.53097, "time": 0.28508}
{"mode": "val", "epoch": 10, "iter": 500, "lr": 1e-05, "bbox_mAP": 0.413, "bbox_mAP_50": 0.627, "bbox_mAP_75": 0.452, "bbox_mAP_s": 0.248, "bbox_mAP_m": 0.476, "bbox_mAP_l": 0.568, "bbox_mAP_copypaste": "0.413 0.627 0.452 0.248 0.476 0.568", "segm_mAP": 0.384, "segm_mAP_50": 0.599, "segm_mAP_75": 0.416, "segm_mAP_s": 0.206, "segm_mAP_m": 0.447, "segm_mAP_l": 0.582, "segm_mAP_copypaste": "0.384 0.599 0.416 0.206 0.447 0.582"}
{"mode": "train", "epoch": 11, "iter": 100, "lr": 1e-05, "memory": 7169, "data_time": 0.04421, "loss_rpn_cls": 0.00895, "loss_rpn_bbox": 0.04165, "loss_cls": 0.11071, "acc": 95.60938, "loss_bbox": 0.19118, "loss_mask": 0.19622, "loss": 0.54871, "time": 0.30751}
{"mode": "train", "epoch": 11, "iter": 200, "lr": 1e-05, "memory": 7169, "data_time": 0.02163, "loss_rpn_cls": 0.00931, "loss_rpn_bbox": 0.04041, "loss_cls": 0.11831, "acc": 95.29102, "loss_bbox": 0.19697, "loss_mask": 0.18738, "loss": 0.55238, "time": 0.27915}
{"mode": "train", "epoch": 11, "iter": 300, "lr": 1e-05, "memory": 7169, "data_time": 0.01923, "loss_rpn_cls": 0.00791, "loss_rpn_bbox": 0.03487, "loss_cls": 0.10737, "acc": 95.75, "loss_bbox": 0.18791, "loss_mask": 0.18819, "loss": 0.52624, "time": 0.2796}
{"mode": "train", "epoch": 11, "iter": 400, "lr": 1e-05, "memory": 7169, "data_time": 0.0181, "loss_rpn_cls": 0.00766, "loss_rpn_bbox": 0.03624, "loss_cls": 0.10015, "acc": 96.05078, "loss_bbox": 0.17648, "loss_mask": 0.18146, "loss": 0.50199, "time": 0.27814}
{"mode": "train", "epoch": 11, "iter": 500, "lr": 1e-05, "memory": 7169, "data_time": 0.01746, "loss_rpn_cls": 0.0085, "loss_rpn_bbox": 0.03592, "loss_cls": 0.10185, "acc": 95.94824, "loss_bbox": 0.1759, "loss_mask": 0.18302, "loss": 0.50518, "time": 0.27521}
{"mode": "train", "epoch": 11, "iter": 600, "lr": 1e-05, "memory": 7169, "data_time": 0.01864, "loss_rpn_cls": 0.00826, "loss_rpn_bbox": 0.04126, "loss_cls": 0.11354, "acc": 95.53223, "loss_bbox": 0.19547, "loss_mask": 0.20371, "loss": 0.56224, "time": 0.27668}
{"mode": "train", "epoch": 11, "iter": 700, "lr": 1e-05, "memory": 7169, "data_time": 0.01764, "loss_rpn_cls": 0.00804, "loss_rpn_bbox": 0.0357, "loss_cls": 0.10154, "acc": 95.93359, "loss_bbox": 0.1687, "loss_mask": 0.17905, "loss": 0.49303, "time": 0.27425}
{"mode": "train", "epoch": 11, "iter": 800, "lr": 1e-05, "memory": 7169, "data_time": 0.02097, "loss_rpn_cls": 0.00845, "loss_rpn_bbox": 0.03937, "loss_cls": 0.11127, "acc": 95.57617, "loss_bbox": 0.18664, "loss_mask": 0.18756, "loss": 0.53328, "time": 0.28633}
{"mode": "train", "epoch": 11, "iter": 900, "lr": 1e-05, "memory": 7169, "data_time": 0.01959, "loss_rpn_cls": 0.00804, "loss_rpn_bbox": 0.03737, "loss_cls": 0.10895, "acc": 95.64941, "loss_bbox": 0.19002, "loss_mask": 0.18395, "loss": 0.52833, "time": 0.28394}
{"mode": "val", "epoch": 11, "iter": 500, "lr": 1e-05, "bbox_mAP": 0.417, "bbox_mAP_50": 0.629, "bbox_mAP_75": 0.465, "bbox_mAP_s": 0.257, "bbox_mAP_m": 0.481, "bbox_mAP_l": 0.566, "bbox_mAP_copypaste": "0.417 0.629 0.465 0.257 0.481 0.566", "segm_mAP": 0.386, "segm_mAP_50": 0.599, "segm_mAP_75": 0.413, "segm_mAP_s": 0.215, "segm_mAP_m": 0.447, "segm_mAP_l": 0.573, "segm_mAP_copypaste": "0.386 0.599 0.413 0.215 0.447 0.573"}
{"mode": "train", "epoch": 12, "iter": 100, "lr": 0.0, "memory": 7169, "data_time": 0.04417, "loss_rpn_cls": 0.00854, "loss_rpn_bbox": 0.03891, "loss_cls": 0.11212, "acc": 95.47363, "loss_bbox": 0.19436, "loss_mask": 0.1894, "loss": 0.54333, "time": 0.31031}
{"mode": "train", "epoch": 12, "iter": 200, "lr": 0.0, "memory": 7169, "data_time": 0.01984, "loss_rpn_cls": 0.00998, "loss_rpn_bbox": 0.03644, "loss_cls": 0.09973, "acc": 96.03906, "loss_bbox": 0.16961, "loss_mask": 0.18347, "loss": 0.49924, "time": 0.27887}
{"mode": "train", "epoch": 12, "iter": 300, "lr": 0.0, "memory": 7169, "data_time": 0.02069, "loss_rpn_cls": 0.00749, "loss_rpn_bbox": 0.04088, "loss_cls": 0.11123, "acc": 95.52637, "loss_bbox": 0.192, "loss_mask": 0.18361, "loss": 0.5352, "time": 0.2811}
{"mode": "train", "epoch": 12, "iter": 400, "lr": 0.0, "memory": 7169, "data_time": 0.02042, "loss_rpn_cls": 0.0099, "loss_rpn_bbox": 0.03929, "loss_cls": 0.10505, "acc": 95.83691, "loss_bbox": 0.1824, "loss_mask": 0.18006, "loss": 0.51669, "time": 0.28398}
{"mode": "train", "epoch": 12, "iter": 500, "lr": 0.0, "memory": 7169, "data_time": 0.0188, "loss_rpn_cls": 0.00771, "loss_rpn_bbox": 0.03597, "loss_cls": 0.10133, "acc": 96.00195, "loss_bbox": 0.18026, "loss_mask": 0.18429, "loss": 0.50955, "time": 0.28591}
{"mode": "train", "epoch": 12, "iter": 600, "lr": 0.0, "memory": 7169, "data_time": 0.01825, "loss_rpn_cls": 0.00722, "loss_rpn_bbox": 0.03783, "loss_cls": 0.10112, "acc": 96.00391, "loss_bbox": 0.17837, "loss_mask": 0.18356, "loss": 0.50811, "time": 0.27685}
{"mode": "train", "epoch": 12, "iter": 700, "lr": 0.0, "memory": 7169, "data_time": 0.01851, "loss_rpn_cls": 0.00758, "loss_rpn_bbox": 0.03614, "loss_cls": 0.10923, "acc": 95.64551, "loss_bbox": 0.1788, "loss_mask": 0.1835, "loss": 0.51524, "time": 0.27765}
{"mode": "train", "epoch": 12, "iter": 800, "lr": 0.0, "memory": 7169, "data_time": 0.01644, "loss_rpn_cls": 0.00687, "loss_rpn_bbox": 0.03066, "loss_cls": 0.09258, "acc": 96.375, "loss_bbox": 0.16553, "loss_mask": 0.17067, "loss": 0.46632, "time": 0.2748}
{"mode": "train", "epoch": 12, "iter": 900, "lr": 0.0, "memory": 7169, "data_time": 0.02113, "loss_rpn_cls": 0.00759, "loss_rpn_bbox": 0.03909, "loss_cls": 0.10544, "acc": 95.72559, "loss_bbox": 0.19077, "loss_mask": 0.18773, "loss": 0.53062, "time": 0.2823}
{"mode": "val", "epoch": 12, "iter": 500, "lr": 0.0, "bbox_mAP": 0.418, "bbox_mAP_50": 0.629, "bbox_mAP_75": 0.474, "bbox_mAP_s": 0.255, "bbox_mAP_m": 0.481, "bbox_mAP_l": 0.566, "bbox_mAP_copypaste": "0.418 0.629 0.474 0.255 0.481 0.566", "segm_mAP": 0.386, "segm_mAP_50": 0.601, "segm_mAP_75": 0.415, "segm_mAP_s": 0.214, "segm_mAP_m": 0.443, "segm_mAP_l": 0.575, "segm_mAP_copypaste": "0.386 0.601 0.415 0.214 0.443 0.575"}
